<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.temporary.center.ls_service.dao.WorkTimeIntervalMapper" >
  <resultMap id="BaseResultMap" type="com.temporary.center.ls_service.domain.WorkTimeInterval" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="recruitment_info_id" property="recruitmentInfoId" jdbcType="BIGINT" />
    <result column="start_hour" property="startHour" jdbcType="INTEGER" />
    <result column="start_minute" property="startMinute" jdbcType="INTEGER" />
    <result column="end_hour" property="endHour" jdbcType="INTEGER" />
    <result column="end_minute" property="endMinute" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, recruitment_info_id, start_hour, start_minute, end_hour, end_minute, sort
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from work_time_interval
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from work_time_interval
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.temporary.center.ls_service.domain.WorkTimeInterval" >
    insert into work_time_interval (id, recruitment_info_id, start_hour, 
      start_minute, end_hour, end_minute, 
      sort)
    values (#{id,jdbcType=BIGINT}, #{recruitmentInfoId,jdbcType=BIGINT}, #{startHour,jdbcType=INTEGER}, 
      #{startMinute,jdbcType=INTEGER}, #{endHour,jdbcType=INTEGER}, #{endMinute,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.temporary.center.ls_service.domain.WorkTimeInterval" >
    insert into work_time_interval
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="recruitmentInfoId != null" >
        recruitment_info_id,
      </if>
      <if test="startHour != null" >
        start_hour,
      </if>
      <if test="startMinute != null" >
        start_minute,
      </if>
      <if test="endHour != null" >
        end_hour,
      </if>
      <if test="endMinute != null" >
        end_minute,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="recruitmentInfoId != null" >
        #{recruitmentInfoId,jdbcType=BIGINT},
      </if>
      <if test="startHour != null" >
        #{startHour,jdbcType=INTEGER},
      </if>
      <if test="startMinute != null" >
        #{startMinute,jdbcType=INTEGER},
      </if>
      <if test="endHour != null" >
        #{endHour,jdbcType=INTEGER},
      </if>
      <if test="endMinute != null" >
        #{endMinute,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.temporary.center.ls_service.domain.WorkTimeInterval" >
    update work_time_interval
    <set >
      <if test="recruitmentInfoId != null" >
        recruitment_info_id = #{recruitmentInfoId,jdbcType=BIGINT},
      </if>
      <if test="startHour != null" >
        start_hour = #{startHour,jdbcType=INTEGER},
      </if>
      <if test="startMinute != null" >
        start_minute = #{startMinute,jdbcType=INTEGER},
      </if>
      <if test="endHour != null" >
        end_hour = #{endHour,jdbcType=INTEGER},
      </if>
      <if test="endMinute != null" >
        end_minute = #{endMinute,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.temporary.center.ls_service.domain.WorkTimeInterval" >
    update work_time_interval
    set recruitment_info_id = #{recruitmentInfoId,jdbcType=BIGINT},
      start_hour = #{startHour,jdbcType=INTEGER},
      start_minute = #{startMinute,jdbcType=INTEGER},
      end_hour = #{endHour,jdbcType=INTEGER},
      end_minute = #{endMinute,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>